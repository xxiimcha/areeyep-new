@model IEnumerable<AreEyeP.Models.Payment>
@{
    Layout = null;
    ViewData["Title"] = "Payment Management";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    @Html.Partial("_CSSLinks")
</head>
<body class="sb-nav-fixed">
    @Html.Partial("_Header")

    <div id="layoutSidenav">
        @Html.Partial("_Sidebar")

        <div id="layoutSidenav_content">
            <main>
                <div class="container-fluid px-4">
                    <h1 class="mt-4">Payment Management</h1>

                    <div class="d-flex justify-content-end mb-4">
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addPaymentModal">
                            <i class="fas fa-file-upload"></i> Upload Payment Details
                        </button>
                    </div>

                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Mode of Payment</th>
                                <th>Bank Name / Provider</th>
                                <th>Account / eWallet Number</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Any())
                            {
                                int i = 1;
                                foreach (var payment in Model)
                                {
                                    <tr>
                                        <td>@i</td>
                                        <td>@payment.PaymentMode</td>
                                        <td>@payment.BankName</td>
                                        <td>@payment.AccountNumber</td>
                                        <td>
                                            <button class="btn btn-danger btn-sm" onclick="deletePayment(@payment.Id)">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5">No payment records found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <!-- Add Payment Modal -->
                    <div class="modal fade" id="addPaymentModal" tabindex="-1" aria-labelledby="addPaymentModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="addPaymentModalLabel">Upload Payment Details</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="addPaymentForm" enctype="multipart/form-data">
                                        @Html.AntiForgeryToken()
                                        <div class="mb-3">
                                            <label for="modeOfPayment" class="form-label">Mode of Payment</label>
                                            <select id="modeOfPayment" name="PaymentMode" class="form-select" required>
                                                <option value="" selected disabled>Select Payment Mode</option>
                                                <option value="ewallet">eWallet</option>
                                                <option value="bank">Bank Transfer</option>
                                            </select>
                                        </div>
                                        <div class="mb-3">
                                            <label for="bankName" class="form-label">Bank Name / eWallet Provider</label>
                                            <input type="text" id="bankName" name="BankName" class="form-control" placeholder="e.g., GCash or Chase Bank" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="accountNumber" class="form-label">Account / eWallet Number</label>
                                            <input type="text" id="accountNumber" name="AccountNumber" class="form-control" placeholder="e.g., 09123456789" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="qrCode" class="form-label">QR Code</label>
                                            <input type="file" id="qrCode" name="QrCode" class="form-control" required>
                                        </div>
                                        <!-- Progress bar -->
                                        <div class="mb-3">
                                            <label class="form-label">Upload Progress</label>
                                            <div class="progress">
                                                <div id="uploadProgress" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
                                            </div>
                                        </div>
                                        <button type="button" id="submitBtn" class="btn btn-primary" onclick="addPayment()" disabled>Submit</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    @Html.Partial("_ScriptLinks")
    <script>
        function addPayment() {
            const form = document.getElementById("addPaymentForm");
            const formData = new FormData(form);
            const progressBar = document.getElementById("uploadProgress");
            const submitBtn = document.getElementById("submitBtn");

            submitBtn.disabled = true; // Disable the button at the start

            fetch('/Payment/AddPayment', {
                method: 'POST',
                body: formData,
            })
                .then(async (response) => {
                    console.log("Response received with status:", response.status);
                    const contentType = response.headers.get("content-type");
                    console.log("Content-Type:", contentType);

                    if (contentType && contentType.includes("application/json")) {
                        return response.json();
                    } else {
                        const text = await response.text();
                        console.error("Unexpected response (not JSON):", text);
                        throw new Error("Unexpected response from the server.");
                    }
                })
                .then((result) => {
                    console.log("Server result:", result);
                    if (result.success) {
                        toastr.success(result.message);
                        const modal = bootstrap.Modal.getInstance(document.getElementById('addPaymentModal'));
                        modal.hide();
                        location.reload();
                    } else {
                        toastr.error(result.message || "An error occurred while uploading payment details.");
                        if (result.errors && result.errors.length > 0) {
                            result.errors.forEach((error) => toastr.error(error));
                        }
                    }
                })
                .catch((error) => {
                    console.error("Error during fetch request:", error);
                    toastr.error("Error: " + error.message);
                })
                .finally(() => {
                    progressBar.style.width = "100%";
                    progressBar.setAttribute("aria-valuenow", 100);
                    progressBar.classList.remove("progress-bar-striped", "progress-bar-animated");
                    submitBtn.disabled = false; // Re-enable the button after completion
                });
        }

        // Listen to file input change to enable submit button and simulate progress
        document.getElementById("qrCode").addEventListener("change", function () {
            const submitBtn = document.getElementById("submitBtn");
            const progressBar = document.getElementById("uploadProgress");

            if (this.files.length > 0) {
                progressBar.style.width = "0%";
                progressBar.setAttribute("aria-valuenow", 0);
                progressBar.classList.add("progress-bar-striped", "progress-bar-animated");
                submitBtn.disabled = false;

                // Simulate progress
                let progress = 0;
                const interval = setInterval(() => {
                    progress += 10;
                    if (progress >= 100) {
                        clearInterval(interval);
                    }
                    progressBar.style.width = `${progress}%`;
                    progressBar.setAttribute("aria-valuenow", progress);
                }, 100);
            } else {
                progressBar.style.width = "0%";
                submitBtn.disabled = true;
            }
        });

        function deletePayment(id) {
            if (confirm("Are you sure you want to delete this payment?")) {
                fetch(`/Payment/DeletePayment?id=${id}`, {
                    method: 'POST'
                }).then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            toastr.success(data.message);
                            location.reload();
                        } else {
                            toastr.error(data.message);
                        }
                    });
            }
        }
    </script>
</body>
</html>
